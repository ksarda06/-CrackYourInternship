int findCheapestPrice(int n, vector<vector<int>>& flights, int src, int dst, int k) {
        vector<pair<int,int>> adj[n];
        for(int i=0;i<flights.size();i++){
           adj[flights[i][0]].push_back({flights[i][1],flights[i][2]});
        }
        vector<int> dis(n,INT_MAX);
        queue<pair<int,pair<int,int>>> q;
        q.push({0,{src,0}});
        while(!q.empty()){
            pair<int,pair<int,int>> p=q.front();
            int stops=p.first;
            int node=p.second.first;
            int d=p.second.second;
            q.pop();
            if(stops>k){
                continue;
            }
            for(int i=0;i<adj[node].size();i++){
                if(d+adj[node][i].second<dis[adj[node][i].first] && stops<=k){
                    dis[adj[node][i].first]=d+adj[node][i].second;
                    q.push({stops+1,{adj[node][i].first,d+adj[node][i].second}});
                }
            }
        }
        if(dis[dst]==INT_MAX){
            return -1;
        }      
        return dis[dst];
    }
