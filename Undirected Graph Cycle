bool dfs(int V,vector<int> adj[],int j,vector<bool>& vis){
        queue<pair<int,int>> q;
        q.push({j,-1});
        vis[j]=true;
        while(!q.empty()){
            auto t=q.front();
            int node=t.first;
            int parent=t.second;
            q.pop();
            for(int i=0;i<adj[node].size();i++){
                if(vis[adj[node][i]]==false){
                    vis[adj[node][i]]=true;
                    q.push({adj[node][i],node});
                }
                else{
                    if(adj[node][i]==parent){
                        continue;
                    }
                    return true;
                }
            }
        }
        return false;
    }
    bool isCycle(int V, vector<int> adj[]) {
        // Code here
        vector<bool> vis(V,false);
        for(int i=0;i<V;i++){
            if(!vis[i]){
                if(dfs(V,adj,i,vis)==true){
                    return true;
                }
            }
        }
        return false;
    }
