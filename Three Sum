//Time Complexity=O(N^2)
//Space Complexity=O(1)
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        set<vector<int>> ans;
        for(int i=0;i<nums.size();i++){
            int j=i+1;
            int k=nums.size()-1;
            while(j<k){
                long long sum=nums[i]+nums[j]+nums[k];
                if(sum==0){
                    vector<int> temp={nums[i],nums[j],nums[k]};
                    ans.insert(temp);
                    j++;
                    k--;
                }
                else if(sum>0){
                    k--;
                }
                else{
                    j++;
                }
            }
        }
        vector<vector<int>> ans1(ans.begin(),ans.end());
        return ans1;
    }
};
