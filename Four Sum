//Time Complexity=O(N^3)
//Space Complexity=O(1)
vector<vector<int>> fourSum(vector<int>& nums, int target) {
        sort(nums.begin(),nums.end());
        set<vector<int>> ans;
        for(int i=0;i<nums.size();i++){
            for(int j=i+1;j<nums.size();j++){
                int k=j+1;
                int l=nums.size()-1;
                while(k<l){
                    long long sum=nums[i]+nums[j];
                   sum=sum+nums[k];
                   sum=sum+nums[l];
                   if(sum==target){
                      vector<int> temp{nums[i],nums[j],nums[k],nums[l]};
                      sort(temp.begin(),temp.end());
                      ans.insert(temp);
                      k++;
                      l--;
                   }
                   else if(sum>target){
                    l--;
                   }
                   else{
                    k++;
                   }
                }
            }
        }
        vector<vector<int>> ans1(ans.begin(),ans.end());
        return ans1;
}
