vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    // code here
	    vector<int> indegree(V,0);
	    for(int i=0;i<V;i++){
	        for(int j=0;j<adj[i].size();j++){
	            indegree[adj[i][j]]++;
	        }
	    }
	    queue<int> q;
	    vector<int> ans;
	    for(int i=0;i<V;i++){
	        if(indegree[i]==0){
	            ans.push_back(i);
	            q.push(i);
	        }
	    }
	    while(!q.empty()){
	        int i=q.front();
	        for(int j=0;j<adj[i].size();j++){
	            indegree[adj[i][j]]--;
	            if(indegree[adj[i][j]]==0){
	                ans.push_back(adj[i][j]);
	                q.push(adj[i][j]);
	            }
	        }
	        q.pop();
	    }
	    return ans;
	}
    bool isCyclic(int V, vector<int> adj[]) {
        // code here
        vector<int> ans=topoSort(V,adj);
        return ans.size()!=V;
    }
