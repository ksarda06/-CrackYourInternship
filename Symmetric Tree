  struct TreeNode {
      int val;
      TreeNode *left;
      TreeNode *right;
      TreeNode() : val(0), left(nullptr), right(nullptr) {}
      TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
      TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
  };
 
class Solution {
public:
    bool solve(TreeNode* left,TreeNode* right){
        if(left==nullptr && right==nullptr){
            return true;
        }
        if(left==nullptr || right==nullptr){
            return false;
        }
        if(left->val==right->val){
            if(solve(left->right,right->left)==false){
                return false;
            }
            if(solve(left->left,right->right)==false){
                return false;
            }
            return true;
        }
        return false;
    }
    bool isSymmetric(TreeNode* root) {
          if(root==nullptr){
            return true;
          }    
          return solve(root->left,root->right);
    }
};
