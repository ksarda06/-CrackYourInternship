
struct TreeNode {
      int val;
      TreeNode *left;
      TreeNode *right;
      TreeNode() : val(0), left(nullptr), right(nullptr) {}
      TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
      TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
  };
 
class Solution {
public:
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        int n=nums.size();
        if(n==0){
            return nullptr;
        }
        TreeNode* root=new TreeNode(nums[n/2]);
        vector<int> left;
        vector<int> right;
        for(int i=0;i<n;i++){
            if(i<n/2){
                left.push_back(nums[i]);
            }
            else if(i>n/2){
                right.push_back(nums[i]);
            }
        }
        root->left=sortedArrayToBST(left);
        root->right=sortedArrayToBST(right);
        return root;
    }
};
