class Solution {
public:
    int sumSubarrayMins(vector<int>& arr) {
        int n=arr.size();
        stack<int> st;
        vector<int> left(n,-1);
        vector<int> right(n,n);
        for(int i=0;i<n;i++){
            while(!st.empty() && arr[st.top()]>=arr[i]){
                st.pop();
            }
            if(!st.empty()){
                left[i]=st.top();
            }
            st.push(i);
        }
        stack<int> st1;
        for(int i=n-1;i>=0;i--){
            while(!st1.empty() && arr[st1.top()]>arr[i]){
                st1.pop();
            }
            if(!st1.empty()){
                right[i]=st1.top();
            }
            st1.push(i);
        }
        int mod=1e9+7;
        long long answer=0;
        for(int i=0;i<n;i++){
            answer=(answer+(arr[i]*(static_cast<long long>(i-left[i])*(right[i]-i))))%mod;
            answer=answer%mod;
        }
        return answer;
    }
};
