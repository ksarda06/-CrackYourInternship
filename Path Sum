
struct TreeNode {
      int val;
      TreeNode *left;
      TreeNode *right;
      TreeNode() : val(0), left(nullptr), right(nullptr) {}
      TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
      TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
  };
 
class Solution {
public:
   bool path(TreeNode* root,int target){
    if(root->left==nullptr && root->right==nullptr){
            target=target-root->val;
            if(target==0){
                return true;
            }
            //ans.pop_back();
            return false;
    }
    target=target-root->val;
    if(root->left){
        if(path(root->left,target)==true){
            return true;
        }
    }
    if(root->right){
        if(path(root->right,target)==true){
            return true;
        }
    }
    return false;
   }
    bool hasPathSum(TreeNode* root, int targetSum) {
        if(root==nullptr){
            return false;
        }
        return (path(root,targetSum));
    }
};
